#:schema https://mise.jdx.dev/schema/mise.json

min_version = "2024.1.1"

[env]
_.file = [".env"]
_.path = [
  '~/.local/bin',
  './node_modules/.bin',
]
FOO = "bar"
FOO_NUM = 1
THIS_PROJECT = "{{config_root}}-{{cwd}}"

[tools]
terraform = "1.9.4"

[tasks]
clean = "cargo clean"
release = "cargo release"
signal-test = "node ./test/fixtures/signal-test.js"
ci = { depends = ["format", "build", "test"] }
pre-commit = { depends = ["render", "lint"] }
lint = { depends = ["lint:*"] }

[tasks.build]
alias = "b"
run = "cargo build --color always --all-features"
#sources = ["Cargo.*", "src/**/*.rs"]
#outputs = ["target/debug/mise"]

[tasks.snapshots]
description = "update test snapshots"
run = "cargo insta test --accept --unreferenced delete"

[tasks.test]
description = "run all tests"
alias = 't'
run = ["mise tasks run test:unit", "mise tasks run test:e2e"]

[tasks."test:unit"]
description = "run unit tests"
run = "cargo test --all-features"
env = { CARGO_TERM_COLOR = "always", "RUST_TEST_THREADS" = "1" }

[tasks."docker:image"]
description = "build docker image from Dockerfile"
run = 'docker build --build-arg GITHUB_TOKEN=$GITHUB_API_TOKEN $root -f $root/packaging/dev/Dockerfile -t ghcr.io/jdx/mise:dev'

[tasks."docker:run"]
description = "run a command inside of development docker container"
run = 'docker run -ti --rm -e GITHUB_API_TOKEN -e TEST_ALL -v $root:/mise -v /tmp/mise/target:/tmp/mise/target -v /tmp/mise/registry:/tmp/mise/registry -w /mise ghcr.io/jdx/mise:dev'
depends = ["docker:image"]

[tasks."docker:cargo"]
description = "run cargo inside of development docker container"
run = 'mise tasks run docker:run cargo'

[tasks."docker:mise"]
description = "run mise inside of development docker container"
run = "mise tasks run -- docker:cargo run --"

[tasks."docker:e2e"]
description = "run e2e tests inside of development docker container"
run = "mise tasks run docker:mise run test:e2e"
