# Copyright 2023 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: dart
repository: https://github.com/hizuki-mimuro/Notoria

packages:
    - "services/*"
    - "packages/*"

command:
    bootstrap:
        environment:
            sdk: ^3.5.3
    clean:
        hooks:
            post: |
                melos exec --flutter -- "flutter clean"
                melos exec --flutter --file-exists="ios/Podfile.lock" -- "cd ios && rm Podfile.lock"
    version:
        branch: main
        releaseUrl: true

scripts:
    flutter-analyze:
        run: flutter analyze . --fatal-infos
        exec:
            concurrency: 1
        description: |
            Run `flutter analyze` in all packages.
        packageFilters:
            dirExists:
                - services

    custom_lint:
        exec: dart run custom_lint
        description: Run custom_lint.
        packageFilters:
            dirExists: lib
            dependsOn: "custom_lint"

    format:ci:
        run: |
            melos exec -- \
            dart format --set-exit-if-changed $(find . -name "*.dart" -not \( -name "*.*freezed.dart" -o -name "*.*g.dart" -o -name "*.gen.dart" -o -wholename "./.dart_tool/*" \) )
        description: Run format.
        packageFilters:
            flutter: true
            dirExists: [lib, test]

    fix:
        exec: |
            dart fix --apply lib
            dart run custom_lint --fix
        description: Run dart and custom_lint fixes.
        packageFilters:
            dirExists: lib

    gen:
        run: dart run build_runner build --delete-conflicting-outputs
        exec:
            concurrency: 1
        description: Run generate code.
        packageFilters:
            dirExists: lib
            dependsOn: "build_runner"

    slang:
        run: dart run slang
        exec:
            concurrency: 1
        description: Run generate translation code.
        packageFilters:
            dirExists: lib
            dependsOn: slang

    gen:watch:
        run: dart run build_runner watch --delete-conflicting-outputs
        exec:
            concurrency: 99
        description: Watch and run generate code.
        packageFilters:
            dirExists: lib
            dependsOn: "build_runner"

    gen:icons:
        exec: dart run flutter_launcher_icons
        description: Generate launcher icons.
        packageFilters:
            dirExists: lib
            dependsOn: "flutter_launcher_icons"

    test:
        run: flutter test
        exec:
            failFast: true
        description: Run flutter test.
        packageFilters:
            flutter: true
            dirExists: test

    test:ci:
        run: flutter test --coverage
        exec:
            failFast: true
        description: Run flutter test for CI.
        packageFilters:
            flutter: true
            dirExists: test

    flutterfire:update:
        exec: flutterfire update
        description: Run flutterfire update.
        packageFilters:
            flutter: true
            dirExists: lib
            dependsOn: "firebase_core"

    pod:
        run: melos run pod:ios --no-select && melos run pod:macos --no-select
        description: Clean install the Pods

    pod:ios:
        exec: |
            cd ios
            rm -f Podfile.lock
            pod install --repo-update
        description: Run pod install on iOS.
        packageFilters:
            dirExists: [lib, ios]
            fileExists: "ios/Podfile"

    build:android:prod:
        run: flutter build appbundle --dart-define-from-file=dart_defines/prod.env
        exec:
            concurrency: 1
        description: Build the AppBundle for the production app.
        packageFilters:
            flutter: true
            dirExists: [lib, android]

    upload:ios:prod:
        run: flutter build ipa --dart-define-from-file=dart_defines/prod.env --export-options-plist="ios/prod/ExportOptions.plist"
        exec:
            concurrency: 1
        description: Upload the IPA for the production app.
        packageFilters:
            flutter: true
            dirExists: [lib, ios]
